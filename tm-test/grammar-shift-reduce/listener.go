// generated by Textmapper; DO NOT EDIT

package grammar

import (
	"fmt"
)

type NodeType int

type Listener func(t NodeType, offset, endoffset int)

const (
	NoType NodeType = iota
	BindingIdentifier
	PredefinedType
	LiteralType  // BindingIdentifier
	StructType  // (ParameterList)*
	InterfaceType  // (InterfaceItem)*
	InterfaceItem  // BindingIdentifier (ParameterList)* RetList?
	FunctionType  // (ParameterList)* RetList?
	ParameterList  // (BindingIdentifier)+ SkrType
	RetList  // (SkrType)+
	MultiLineComment
	SingleLineComment
	InvalidToken
	NodeTypeMax
)

var nodeTypeStr = [...]string{
	"NONE",
	"BindingIdentifier",
	"PredefinedType",
	"LiteralType",
	"StructType",
	"InterfaceType",
	"InterfaceItem",
	"FunctionType",
	"ParameterList",
	"RetList",
	"MultiLineComment",
	"SingleLineComment",
	"InvalidToken",
}

func (t NodeType) String() string {
	if t >= 0 && int(t) < len(nodeTypeStr) {
		return nodeTypeStr[t]
	}
	return fmt.Sprintf("node(%d)", t)
}

var SkrType = []NodeType{
    FunctionType,
    InterfaceType,
    LiteralType,
    PredefinedType,
    StructType,
}

var ruleNodeType = [...]NodeType{
	BindingIdentifier, // BindingIdentifier : Identifier
	PredefinedType, // PredefinedType : 'void'
	PredefinedType, // PredefinedType : 'symbol'
	PredefinedType, // PredefinedType : 'string'
	PredefinedType, // PredefinedType : 'bool'
	PredefinedType, // PredefinedType : 'int'
	LiteralType, // LiteralType : BindingIdentifier
	0, // Type : PrimaryType
	0, // PrimaryType : PredefinedType
	0, // PrimaryType : LiteralType
	0, // PrimaryType : StructType
	0, // PrimaryType : InterfaceType
	0, // PrimaryType : FunctionType
	0, // ParameterList_optlist : ParameterList_optlist ParameterList
	0, // ParameterList_optlist :
	StructType, // StructType : 'struct' '{' ParameterList_optlist '}'
	0, // InterfaceItem_optlist : InterfaceItem_optlist InterfaceItem
	0, // InterfaceItem_optlist :
	InterfaceType, // InterfaceType : 'interface' '{' InterfaceItem_optlist '}'
	InterfaceItem, // InterfaceItem : BindingIdentifier FunctionInfo
	FunctionType, // FunctionType : 'func' FunctionInfo
	0, // FunctionInfo : '(' ParameterList_list_Comma_separated_opt ')' RetList
	0, // FunctionInfo : '(' ParameterList_list_Comma_separated_opt ')'
	0, // ParameterList_list_Comma_separated : ParameterList_list_Comma_separated ',' ParameterList
	0, // ParameterList_list_Comma_separated : ParameterList
	0, // ParameterList_list_Comma_separated_opt : ParameterList_list_Comma_separated
	0, // ParameterList_list_Comma_separated_opt :
	0, // BindingIdentifier_list_Comma_separated : BindingIdentifier_list_Comma_separated ',' BindingIdentifier
	0, // BindingIdentifier_list_Comma_separated : BindingIdentifier
	ParameterList, // ParameterList : BindingIdentifier_list_Comma_separated Type
	RetList, // RetList : Type
	RetList, // RetList : '(' Type_list_Comma_separated ')'
	0, // Type_list_Comma_separated : Type_list_Comma_separated ',' Type
	0, // Type_list_Comma_separated : Type
}

